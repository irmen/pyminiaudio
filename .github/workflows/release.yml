name: Build and upload to PyPI

# Build on every published release
on:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Need to be PIP517 build in order to avoid setuptools bug - https://github.com/pypa/cibuildwheel/issues/813
        # I dunno enough about the work involved in that - sorry!
        # os: [ubuntu-latest, windows-latest, macos-11, macos-latest]
          os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.10'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
        # I can't get windows tests to work, but at least here's linux testing the built wheels
          CIBW_BEFORE_TEST_LINUX: mkdir -p ~/examples/samples && cp -R {project}/examples/samples/* ~/examples/samples/
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND_LINUX: "pytest {project}/tests"


      - uses: actions/upload-artifact@v2
        with:
          name: pypi_artifacts
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.10'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          name: pypi_artifacts
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPi
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every release publish
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: pypi_artifacts
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/